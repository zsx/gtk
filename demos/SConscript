# vim: ft=python expandtab
Import('env')

env_demos = env.Clone()

env_demos['CPPDEFINES']=['HAVE_CONFIG_H',
                       'GTK_DISABLE_DEPRECATED',
                       'GDK_DISABLE_DEPRECATED'] + env['DEBUG_CPPDEFINES']
env_demos.Append(CPPPATH=['#', '#gtk', '#gdk-pixbuf', '#gdk'])
env_demos.Append(LIBS=['libgdk-win32-2.0.lib', 'libgtk-win32-2.0.lib', 'libgdk_pixbuf-2.0.lib'])
env_demos.Append(LIBPATH=['#gdk', '#gtk', '#gdk-pixbuf'])

'''
test-inline-pixbufs.h: $(pixbuf_csource_deps) apple-red.png gnome-foot.png
	$(pixbuf_csource) --raw --build-list		\
	        apple_red  $(srcdir)/apple-red.png	\
                gnome_foot $(srcdir)/gnome-foot.png	\
        > test-inline-pixbufs.h				\
	|| (rm -f test-inline-pixbufs.h && false)
        '''
env_demos.Command('test-inline-pixbufs.h', ['$PREFIX/bin/gdk-pixbuf-csource.exe', 'apple-red.png', 'gnome-foot.png'], '''
        $PREFIX\\bin\\gdk-pixbuf-csource --raw --build-list apple_red demos\\apple-red.png gnome_foot demos\\gnome-foot.png > $TARGET''')

tests = (('testpixbuf', ['testpixbuf.c', 'pixbuf-init.obj']),
         ('testpixbuf_drawable', ['testpixbuf-drawable.c', 'pixbuf-init.obj']),
         ('testpixbuf_save', ['testpixbuf-save.c']),
         ('testpixbuf_scale', ['testpixbuf-scale.c', 'pixbuf-init.obj']),
         ('testanimation', ['testanimation.c', 'pixbuf-init.obj']),
         ('pixbuf_demo', ['pixbuf-demo.c', 'pixbuf-init.obj']))
env_demos.Depends('testpixbuf', 'test-inline-pixbufs.h')

env_demos.StaticObject('pixbuf-init', 'pixbuf-init.c') 

for x in tests:
    e = env_demos.Clone()
    if isinstance(x, str):
        name = x
        src = x + '.c'
    else:
        name = x[0]
        src = x[1]
    e['PDB'] = name + '.pdb'
    e.Program(name, src)
    if name != 'testpixbuf_scale' \
        and name != 'testanimation': #skip this because we don't have a test animation file
        e.AlwaysBuild(e.Alias('test', [], 'cd demos && %s.exe' % name))
    else: 
        e.AlwaysBuild(e.Alias('test', [], 'cd demos && %s.exe apple-red.png' % name))

SConscript('gtk-demo/SConscript', exports = 'env_demos')
