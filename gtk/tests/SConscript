# vim: ft=python expandtab
Import('env_gtk')

env_gtk_tests = env_gtk.Clone()

env_gtk_tests['CPPDEFINES']=['HAVE_CONFIG_H',
                       'GTK_DISABLE_DEPRECATED',
                       'GDK_DISABLE_DEPRECATED'] + env_gtk['DEBUG_CPPDEFINES']
env_gtk_tests.Append(CPPPATH=['#', '#gtk', '#gdk-pixbuf', '#gdk'])
env_gtk_tests.Append(LIBS=['libgdk-win32-2.0.lib', 'libgtk-win32-2.0.lib', 'libgdk_pixbuf-2.0.lib'])
env_gtk_tests.Append(LIBPATH=['#gdk', '#gtk', '#gdk-pixbuf'])

tests = ('testing',
         'liststore',
         'treestore',
         'treeview',
         'treeview-scrolling',
         'recentmanager',
         'floating',
         ('object', ['object.c', 'pixbuf-init.obj']),
         'crossingevents',
         #('filechooser', ['filechooser.c', 'pixbuf-init.obj']),
         ('textbuffer', ['textbuffer.c', 'pixbuf-init.obj']),
         'filtermodel',
         'expander')
env_gtk.StaticObject('pixbuf-init', 'pixbuf-init.c') 

for x in tests:
    e = env_gtk_tests.Clone()
    if isinstance(x, str):
        name = x
        src = x + '.c'
    else:
        name = x[0]
        src = x[1]
    e['PDB'] = name + '.pdb'
    e.Program(name, src)
    e.AlwaysBuild(e.Alias('test', [name + '.exe'], 'cd gtk\\tests && %s.exe' % name))
